<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UserRoleTest</name>
    </assembly>
    <members>
        <member name="M:UserRoleTest.Controllers.AuthController.Login(UserRoleTest.Models.Account)">
            <summary>
            Реализация аутентификации с помощью JWT
            </summary>
            <remarks>
            Для успешной аутентификации необходима предварительная регистрация.
            </remarks>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:UserRoleTest.Controllers.AuthController.Register(UserRoleTest.Models.Account)">
             <summary>
            Регистрация аккаунта
             </summary>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:UserRoleTest.Controllers.AuthController.TestAuthorization">
            <summary>
            Метод для проверки работы авторизации
            </summary>
            <remarks>
            Предполагается, что любой пользовать с существующим аккаунтом обладает необходимыми правами.
            Среди всех методов в приложении, аутентификация необходима только для этого.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:UserRoleTest.Controllers.AuthController.GenerateJwtToken(System.String)">
            <summary>
            Выдача JWT-токена при успешной аутентификации
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:UserRoleTest.Controllers.RoleController.GetRoles(UserRoleTest.Helpers.PaginationOptions,UserRoleTest.Helpers.RolesFilteringOptions,UserRoleTest.Helpers.RolesSortingHelper)">
            <summary>
            Получение всех ролей с фильтрацией
            </summary>
            <param name="pagingOptions">Параметры пагинации</param>
            <param name="filterOptions">Фильтры</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.RoleController.GetRole(System.Nullable{System.Int32})">
            <summary>
            Получение роли по ID
            </summary>
            <param name="roleId">ID роли</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.UserController.GetUsers(UserRoleTest.Helpers.PaginationOptions,UserRoleTest.Helpers.UsersFilteringOptions,UserRoleTest.Helpers.UsersSortingHelper)">
            <summary>
            Получение всех пользователей с фильтрацией
            </summary>
            <param name="pagingOptions">Параметры пагинации</param>
            <param name="filterOptions">Фильтры</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.UserController.GetUser(System.Nullable{System.Int32})">
            <summary>
            Получение пользователя по ID
            </summary>
            <param name="userId">ID пользователя</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.UserController.AddUser(UserRoleTest.Models.User)">
            <summary>
            Создание нового пользователя
            </summary>
            <param name="user">Набор свойств пользователя</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.UserController.DeleteUser(System.Nullable{System.Int32})">
            <summary>
            Удаление пользователя
            </summary>
            <param name="userId">ID пользователя</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.UserController.UpdateUser(System.Nullable{System.Int32},UserRoleTest.Models.User)">
            <summary>
            Обновление пользователя по ID
            </summary>
            <param name="userId"></param>
            <param name="user">Набор новых свойств пользователя</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="M:UserRoleTest.Controllers.UserController.AddUserToRole(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Добавление пользователю новой роли
            </summary>
            <param name="userId">ID пользователя</param>
            <param name="roleId">ID роли</param>
            <returns></returns>
            <response code="200">Успешное выполнение</response>
            <response code="400">Ошибка Запроса API</response>
            <response code="404">Ресурс не найден</response>
        </member>
        <member name="T:UserRoleTest.Helpers.PaginationOptions">
            <summary>
            Инкапсулирует свойства пагинации для коллекции
            </summary>
        </member>
        <member name="T:UserRoleTest.Helpers.RolesFilteringOptions">
            <summary>
            Инкапсулирует текстовые параметры для фильтрации коллекции User
            </summary>
        </member>
        <member name="T:UserRoleTest.Helpers.RolesSortingHelper">
            <summary>
            Реализует сорировку коллекции типа User по строковым параметрам
            </summary>
        </member>
        <member name="M:UserRoleTest.Helpers.RolesSortingHelper.SortResponse(System.Linq.IQueryable{UserRoleTest.Models.Role})">
            <summary>
            Сортирует коллекцию заданного типа по значению поля "SortBy"
            </summary>
            <param name="list">Коллекция для сортировки</param>
            <returns>Отсортированное коллекция</returns>
        </member>
        <member name="T:UserRoleTest.Helpers.UsersFilteringOptions">
            <summary>
            Инкапсулирует текстовые параметры для фильтрации коллекции User
            </summary>
        </member>
        <member name="T:UserRoleTest.Helpers.UsersSortingHelper">
            <summary>
            Реализует сорировку коллекции типа User по строковым параметрам
            </summary>
        </member>
        <member name="M:UserRoleTest.Helpers.UsersSortingHelper.SortResponse(System.Linq.IQueryable{UserRoleTest.Models.User})">
            <summary>
            Сортирует коллекцию заданного типа по значению поля "SortBy"
            </summary>
            <param name="list">Коллекция для сортировки</param>
            <returns>Отсортированное коллекция</returns>
        </member>
        <member name="M:UserRoleTest.Middleware.JwtAuthMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Проверка хедеров и закрепление токена за контекстом
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:UserRoleTest.Middleware.JwtAuthMiddleware.attachAccountToContext(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Закрепление токена за контекстом
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:UserRoleTest.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:UserRoleTest.Migrations.Migration_Added_User_Model_Requirements">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_Added_User_Model_Requirements.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_Added_User_Model_Requirements.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_Added_User_Model_Requirements.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:UserRoleTest.Migrations.Migration_3">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_3.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_3.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_3.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:UserRoleTest.Migrations.Migration_4">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_4.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_4.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_4.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:UserRoleTest.Migrations.Migration_5">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_5.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_5.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:UserRoleTest.Migrations.Migration_5.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
